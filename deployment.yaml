apiVersion: apps/v1
kind: Deployment
metadata:
  name: board-app
  namespace: board
spec:
  replicas: 2
  selector:
    matchLabels:
      app: board-app
  template:
    metadata:
      labels:
        app: board-app
    spec:
      containers:
        - name: jboss
          image: default-route-openshift-image-registry.apps.ext2.mtp.local/board/eap74-openjdk17-openshift-rhel8:latest
          ports:
            - containerPort: 8080
          env:
            - name: WILDFLY_BIND
              value: "0.0.0.0"
            - name: WILDFLY_PORT
              value: "8080"
            - name: WILDFLY_ENABLE_HTTPS
              value: "false"
            - name: WILDFLY_ENABLE_HTTP
              value: "true"
            - name: WILDFLY_SERVER_CONFIG
              value: "standalone-openshift.xml"
          command: ["/bin/sh", "-c"]
          args:
            - |
              LOGGING_CONFIG="/opt/eap/standalone/configuration/logging.properties"
              XML_CONFIG="/opt/eap/standalone/configuration/standalone-openshift.xml"

              echo "==== Step 1: Removing activemq-rar.rar to prevent deployment failure ===="
              rm -f /opt/eap/standalone/deployments/activemq-rar.rar
              rm -f /opt/eap/standalone/deployments/activemq-rar.rar.deployed
              
              echo "==== Step 2: Ensuring activemq-rar.rar is undeployed in JBoss CLI ===="
              /opt/eap/bin/jboss-cli.sh --connect --commands="undeploy activemq-rar.rar --keep-content"

              echo "==== Step 3: Verifying activemq-rar.rar is removed ===="
              if [ -f "/opt/eap/standalone/deployments/activemq-rar.rar" ]; then
                echo "ERROR: activemq-rar.rar still exists!"
                exit 1
              fi

              echo "==== Step 4: Setting up JBoss logging configuration ===="
              if [ -f "$XML_CONFIG" ]; then
                echo "Config file found: $XML_CONFIG"
              else
                echo "ERROR: $XML_CONFIG not found!"
                exit 1
              fi

              cat << EOF > $LOGGING_CONFIG
              formatter.CONSOLE-FORMATTER=org.jboss.logmanager.formatters.PatternFormatter
              formatter.CONSOLE-FORMATTER.pattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%E%n
              EOF

              echo "==== Step 5: Enabling JBoss Management Console ===="
              /opt/eap/bin/jboss-cli.sh --connect --command="/core-service=management/management-interface=http-interface:write-attribute(name=enabled,value=true)"

              echo "==== Step 6: Waiting for JBoss to be ready ===="
              until /opt/eap/bin/jboss-cli.sh --connect --commands=":read-attribute(name=server-state)" | grep -q "running"; do
                echo "Waiting for JBoss to start..."
                sleep 5
              done

              echo "==== Step 7: Removing unused subsystems to prevent errors ===="
              /opt/eap/bin/jboss-cli.sh --connect <<EOF
              /subsystem=jca:remove
              /subsystem=transactions:remove
              /subsystem=ee:write-attribute(name=default-bindings,value={context-service=default})
              reload
              EOF

              echo "==== Step 8: Starting JBoss ===="
              exec /opt/eap/bin/standalone.sh -b 0.0.0.0 --server-config=standalone-openshift.xml
